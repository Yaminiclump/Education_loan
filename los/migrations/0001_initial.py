# Generated by Django 3.2.12 on 2022-02-19 12:13

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('salutation', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('first_name', models.TextField()),
                ('middle_name', models.TextField(null=True)),
                ('last_name', models.TextField(null=True)),
                ('gender', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('date_of_birth', models.DateTimeField(null=True)),
                ('relation_with_applicant', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('marital_status', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('father_first_name', models.TextField(null=True)),
                ('father_middle_name', models.TextField(null=True)),
                ('father_last_name', models.TextField(null=True)),
                ('mother_first_name', models.TextField(null=True)),
                ('mother_middle_name', models.TextField(null=True)),
                ('mother_last_name', models.TextField(null=True)),
                ('spouse_first_name', models.TextField(null=True)),
                ('spouse_middle_name', models.TextField(null=True)),
                ('spouse_last_name', models.TextField(null=True)),
                ('no_of_family_members', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)])),
                ('household_income_monthly', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999999999)])),
                ('status', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('creation_date', models.DateTimeField()),
                ('creation_by', models.TextField()),
                ('updation_date', models.DateTimeField(null=True)),
                ('updation_by', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerContact',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('type', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('value', models.TextField()),
                ('value_extra_1', models.TextField(null=True)),
                ('country_code', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)])),
                ('status', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('creation_date', models.DateTimeField()),
                ('creation_by', models.TextField()),
                ('updation_date', models.DateTimeField(null=True)),
                ('updation_by', models.TextField(null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='los.customer')),
            ],
            options={
                'db_table': 'los_customer_contact',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('institute_id', models.BigIntegerField()),
                ('institute_name', models.TextField(null=True)),
                ('course_id', models.BigIntegerField()),
                ('course_name', models.TextField(null=True)),
                ('stream_id', models.BigIntegerField()),
                ('stream_name', models.TextField(null=True)),
                ('start_month_year', models.DateField(null=True)),
                ('end_month_year', models.DateField()),
                ('marks', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(10000)])),
                ('max_marks', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(999)])),
                ('marks_type', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(99)])),
                ('duration_months', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)])),
                ('course_type', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(99)])),
                ('status', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)])),
                ('creation_date', models.DateTimeField()),
                ('creation_by', models.TextField()),
                ('updation_date', models.DateTimeField(null=True)),
                ('updation_by', models.TextField(null=True)),
                ('customer', models.ForeignKey(default='SOME STRING', on_delete=django.db.models.deletion.RESTRICT, to='los.customer')),
            ],
            options={
                'db_table': 'los_education',
            },
        ),
        migrations.CreateModel(
            name='Employment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('type', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)])),
                ('employer_id', models.BigIntegerField(null=True)),
                ('employer_name', models.TextField(null=True)),
                ('address_id', models.BigIntegerField(null=True)),
                ('designation_id', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)])),
                ('designation_name', models.TextField(null=True)),
                ('retirement_age_years', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)])),
                ('current_employer_months', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)])),
                ('gross_income_monthly', models.IntegerField()),
                ('net_income_monthly', models.IntegerField()),
                ('other_income_monthly', models.IntegerField(null=True)),
                ('work_experience_month', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)])),
                ('status', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('creation_date', models.DateTimeField()),
                ('creation_by', models.TextField()),
                ('updation_date', models.DateTimeField(null=True)),
                ('updation_by', models.TextField(null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='los.customer')),
            ],
            options={
                'db_table': 'los_empolyment',
            },
        ),
        migrations.CreateModel(
            name='EmploymentLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('type', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)])),
                ('employer_id', models.BigIntegerField(null=True)),
                ('employer_name', models.TextField(null=True)),
                ('address_id', models.BigIntegerField(null=True)),
                ('designation_id', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)])),
                ('designation_name', models.TextField(null=True)),
                ('retirement_age_years', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)])),
                ('current_employer_months', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)])),
                ('gross_income_monthly', models.IntegerField()),
                ('net_income_monthly', models.IntegerField()),
                ('other_income_monthly', models.IntegerField(null=True)),
                ('work_experience_month', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)])),
                ('status', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('creation_date', models.DateTimeField()),
                ('creation_by', models.TextField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='los.customer')),
                ('employment', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='los.employment')),
            ],
            options={
                'db_table': 'los_empolyment_log',
            },
        ),
        migrations.CreateModel(
            name='EducationLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('institute_id', models.BigIntegerField()),
                ('institute_name', models.TextField(null=True)),
                ('course_id', models.BigIntegerField()),
                ('course_name', models.TextField(null=True)),
                ('stream_id', models.BigIntegerField()),
                ('stream_name', models.TextField(null=True)),
                ('start_month_year', models.DateField(null=True)),
                ('end_month_year', models.DateField()),
                ('marks', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(10000)])),
                ('max_marks', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(999)])),
                ('marks_type', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(99)])),
                ('duration_months', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)])),
                ('course_type', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(99)])),
                ('status', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)])),
                ('creation_date', models.DateTimeField()),
                ('creation_by', models.TextField()),
                ('customer', models.ForeignKey(default='SOME STRING', on_delete=django.db.models.deletion.RESTRICT, to='los.customer')),
                ('education', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='los.education')),
            ],
            options={
                'db_table': 'los_education_log',
            },
        ),
        migrations.CreateModel(
            name='CustomerLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('salutation', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('first_name', models.TextField()),
                ('middle_name', models.TextField(null=True)),
                ('last_name', models.TextField(null=True)),
                ('gender', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('date_of_birth', models.DateTimeField(null=True)),
                ('relation_with_applicant', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('marital_status', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('father_first_name', models.TextField(null=True)),
                ('father_middle_name', models.TextField(null=True)),
                ('father_last_name', models.TextField(null=True)),
                ('mother_first_name', models.TextField(null=True)),
                ('mother_middle_name', models.TextField(null=True)),
                ('mother_last_name', models.TextField(null=True)),
                ('spouse_first_name', models.TextField(null=True)),
                ('spouse_middle_name', models.TextField(null=True)),
                ('spouse_last_name', models.TextField(null=True)),
                ('no_of_family_members', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)])),
                ('household_income_monthly', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999999999)])),
                ('status', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('creation_date', models.DateTimeField()),
                ('creation_by', models.TextField()),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='los.customer')),
            ],
            options={
                'db_table': 'los_customer_log',
            },
        ),
        migrations.CreateModel(
            name='CustomerContactLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('type', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('value', models.TextField()),
                ('value_extra_1', models.TextField(null=True)),
                ('country_code', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)])),
                ('status', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('creation_date', models.DateTimeField()),
                ('creation_by', models.TextField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='los.customer')),
                ('customer_contact', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='los.customercontact')),
            ],
            options={
                'db_table': 'los_customer_contact_log',
            },
        ),
    ]
